import { useState } from 'react'
import axios from 'axios'

export const useSubscription = () => {
  const [isProcessing, setIsProcessing] = useState(false)
  const onSubscribe = async () => {
    setIsProcessing(true)
    try {
      const response = await axios.get('/api/payment')
      if (response.data.status === 200) {
        return (window.location.href = `${response.data.session_url}`)
      }
      setIsProcessing(false)
    } catch (error) {
      console.log(error, 'ðŸ”´')
    }
  }
  return { onSubscribe, isProcessing }
}

// ðŸ”¹ Key Benefits of Axios
// âœ” Easy to Use â€“ Cleaner syntax than fetch()
// âœ” Promise-Based â€“ Supports async/await for better readability
// âœ” Automatic JSON Handling â€“ Parses JSON responses automatically
// âœ” Request & Response Interceptors â€“ Modify requests or responses globally
// âœ” Error Handling â€“ Provides better error messages than fetch()
// âœ” Supports Timeout & Cancellation â€“ Helps manage network requests efficiently
// âœ” Works in Browser & Node.js â€“ Can be used in frontend & backend